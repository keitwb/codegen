import re
import os

from .base import RendererExtension
from .sections import CustomSectionsExtension 

class BannerExtension(RendererExtension):
    banner_text = (
        """THIS FILE IS AUTOMATICALLY GENERATED!!!

        Source template: {template_path} 

        Only modifications in the specially marked sections will be preserved by
        the generator.""")

    def post_render(self, output):
        ext_to_comment_start = {
            'pm': '#',
            'py': '#',
            'java': '//',
            'sql': '--',
        }

        # Let any exceptions fall up
        ext = self.template.render_path.rsplit('.', 1)[1]
        comment_start = ext_to_comment_start[ext]

        # Add in comments and template name
        banner = (re.sub('(?m)^[ ]*', comment_start + ' ', self.banner_text)
                   .format(template_path=os.path.basename(self.template.name)))

        return "%s\n%s" % (banner, output)


class BeautifyingExtension(RendererExtension):
    def post_render(self, output):
        if self.template.pretty:
            beautifier = Beautifier.by_extension(self.template.render_path)
            if beautifier is None:
                cw.warning('Skipping pretty print: formatter not found for filetype.')
            else:
                output = beautifier.process(output)

        return output
